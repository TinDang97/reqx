[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "enhanced-httpx"
version = "0.1.0"
description = "An enhanced HTTP client built on top of httpx for custom HTTP requests with async support."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "youremail@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "uvloop>=0.17.0; sys_platform != 'win32'",
    "orjson>=3.9.0",
    "jsonpath-ng>=1.5.0",
    "click>=8.1.0",
    "typing-extensions>=4.7.0",
    "python-jose>=3.4.0",
]

[project.optional-dependencies]
compression = [
    "brotli>=1.0.9",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/enhanced-httpx"
"Bug Tracker" = "https://github.com/yourusername/enhanced-httpx/issues"
"Documentation" = "https://github.com/yourusername/enhanced-httpx"
"Source Code" = "https://github.com/yourusername/enhanced-httpx"

[project.scripts]
enhanced-httpx = "enhanced_httpx.cli:cli"

[tool.hatch.build.targets.wheel]
packages = ["src/enhanced_httpx"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
extend-exclude = '''
    /build/
    /dist/
    /docs/
    /examples/
    /tests/
    /.venv/
    /scripts/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
skip = ["examples/", "tests/", "docs/", "build/", "dist/", ".venv/", "scripts/"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
exclude = '''
    /build/
    /dist/
    /docs/
    /examples/
    /tests/
    /.venv/
    /scripts/
'''

[tool.ruff]
line-length = 100
target-version = "py38"
exclude = ["examples", "tests", "docs", "build", "dist", ".venv", "scripts"]

[tool.ruff.lint]
ignore = [
    "F403",  # 'from module import *' used; unable to detect undefined names
]
select = ["E", "F", "B", "I"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"

[dependency-groups]
dev = [
    "aiohttp>=3.10.11",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.4.0",
    "ruff>=0.0.270",
    "httpx-cache>=0.11.0",
    "respx>=0.20.0",
    "pytest-cov>=4.1.0",
    "pre-commit>=3.5.0",
]
